# 변수 / 대소문자 구분 / 문자부터 시작해야함 / _(밑줄 문자)로 시작 가능 / 특수문자 사용 할 수없음 / 파이썬 키워드(if,for while, and, or 사용 불가)

x = 10
y = 'Hello world' # 수학에서 =는 양변이 같다지면 프로그래밍 언어에선 =는 변수에 값을 할당한다는 의미 수학의 등호와 같은 역활을 하는건 == 

# 변수의 자료형 알아내기/ 파이썬에서는 변수를 사용하다보면 자료형이 맞지 않아 발생하는 문제가 많음 이때 type으로 자료형이 뭔지 알아내면 해결가능

print(type(x)) # <class 'int'>
print(type(y)) # <class 'str'>

# 변수 여러 개를 한번에 만들기

x, y, z = 10, 20 ,30
print(x) # 10
print(y) # 20
print(z) # 30

# 변수이름1, 변수이름2, 변수이름3 = 값1, 값2, 값3 나열된 순서대로, 변수와 값의 개수는 동일하게 해야 함 안하면 에러남

# 변수 여러개 만들 때 값이 모두 같아도 된다면

x = y = z = 100 # 이렇게 하면 x,y,z 다 100이됨

# 두 변수의 값을 바꾸려면 변수를 할당할때 서로 자리를 바꿔주면 됨 변수1, 변수2 = 변수2, 변수1 형식

x, y = 10, 20
x, y = y, x
print(x) # 20
print(y) # 10

# del 변수 삭제하기 

x = 10
del x
# print(x) 하면 NameError: name 'x' is not defined

# None 빈 변수 만들기/ 파이선 에서 None은 아무것도 없는 상태를 난타내느 자료형, 보통 다른 언어에서는 널(null) 이라고 표현합니다.

h = None
print(h)

# 변수로 계산하기

a = 10
b = 20
c = a + b
print(c)

# 산술 연산 후 할당 연산자 사용하기

a = 10
print(a + 20) # 단지 계산을 한건지 a 값을 새로 저장한게 아님
print(a) #  그래서 a는 그대로 10

# 변수 한 개에서 값의 변화를 계속 유지하려면 계산 결과를 다시 변수에 저장해야 함

a = 10
a = a + 20
print(a) # 30

# 파이선은 변수를 두 번 입력하지 않도록 산술 연산 후 할당 연산자 제공

a= 10
a += 30 # a와 30을 더한 후 결과를 다시 a에 저장 하라는 뜻
print(a) # 40

# + - x % 같은 산술 연산자 앞에 =(할당 연산자)를 붙이면 연산 결과를 변수에 저장함 즉 a+=20 은 a = a + 20 을 축약한 형태
# 덧셈 뿐만 아니라 곱셈 나눗셈 뺄셈 나머지도 같은 방식 으로 사용가능. 똑같이 연산 후 할당 한다는 뜻.

# 주의 해야할점은 이미만들어진 변수에 써야함. 안그러면 에러가남 

h = 15
h *= 3
print(h) # 45

x = 5
x %=2
print(x) # 1

p = 6
p /= 4
print(p) # 1.5

g = 7
g //=2
print(g) # 3

# 부호 붙히기 양수 음수 앞에 +,- 를 붙혀 부호를 정할 수있음
s = -10
print(+s) # -10
print(-s) # 10


# input 함수 / 매번 다른 값을 변수에 할당하려면
z = input()
print('hi hello')

